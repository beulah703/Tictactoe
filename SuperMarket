import java.sql.Date;
import java.text.SimpleDateFormat;

public class StringToSqlDateExample {
    public static void main(String[] args) {
        String dateString = "2023-04-25";
        SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        try {
            java.util.Date utilDate = format.parse(dateString);
            java.sql.Date sqlDate = new java.sql.Date(utilDate.getTime());
            System.out.println(sqlDate);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
In the example above, we first define a string `dateString










package com.java.Test;

import java.awt.Button;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.awt.Color;
import java.awt.Font;
import java.awt.Frame;
import java.awt.Image;
import java.awt.Label;
import java.awt.TextArea;
import java.awt.TextField;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.Timestamp;
import java.time.Instant;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;

class superMarketApplication {
	ResultSet rs;
	Connection con;
	PreparedStatement ps;
	String query = "";

	public superMarketApplication() {
		Frame f = new Frame();
		// TextArea For Purchase
		TextArea ta = new TextArea();
		ta.setBounds(340, 550, 700, 250);

		// Label Creation
		Label ll = new Label("      Super Market");
		ll.setBounds(570, 40, 300, 40);
		ll.setFont(new Font("Bold", 70, 30));
		// ll.setBackground(Color.lightGray);
		f.add(ll);

		JButton b6 = new JButton("Customer");
		b6.setBounds(670, 360, 100, 30);
		JButton b7 = new JButton("Owner");
		b7.setBounds(670, 270, 100, 30);
		f.setLayout(null);
		f.setSize(1920, 1080);
		f.setTitle("SuperMarket");
		f.setVisible(true);
		f.add(b6);
		f.add(b7);
		ImageIcon background_image = new ImageIcon("C:\\Users\\beula\\OneDrive\\Pictures\\Saved Pictures\\beuus.jpg ");
		JLabel background = new JLabel("", background_image, JLabel.CENTER);
		Image img = background_image.getImage();
		Image temp_img = img.getScaledInstance(1920, 1080, Image.SCALE_SMOOTH);
		background_image = new ImageIcon(temp_img);
		background.setBounds(0, 0, 1920, 1080);
		f.add(background);

		f.setBackground(Color.lightGray);
		f.addWindowListener(new WindowAdapter() {
			public void windowClosing(WindowEvent we) {
				System.exit(0);
			}

		});

		b7.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ae) {

				// Result set of VEndors list
				query = "Select * from bVendors";
				String y = "";
				try {
					String s="";
					Class.forName("org.postgresql.Driver");
					s="jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
			        con=DriverManager.getConnection(s);

					
					//Statement cs = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE);

					System.out.println(y);

				} catch (Exception exe) {
					System.out.println(exe);
				}

				Frame f1 = new Frame();
				Label ll = new Label("          OWNER");
				ll.setBounds(570, 40, 300, 40);
				ll.setFont(new Font("Bold", 70, 30));
				JButton b1 = new JButton("Purchase");
				b1.setBounds(540, 360, 130, 30);
				JButton b2 = new JButton("Master_Entry");
				b2.setBounds(540, 270, 130, 30);
				JButton b3 = new JButton("Stocks");
				b3.setBounds(740, 360, 130, 30);
				JButton b4 = new JButton("Reports");
				b4.setBounds(740, 270, 130, 30);

				f1.setLayout(null);
				f1.setSize(1920, 1080);
				f1.setTitle("OWNER");
				f1.setVisible(true);
				f1.add(ll);
				f1.add(b1);
				f1.add(b2);
				f1.add(b3);
				f1.add(b4);
				ImageIcon background_image = new ImageIcon("C:\\Users\\beula\\OneDrive\\Pictures\\Saved Pictures\\beuus.jpg ");
				JLabel background = new JLabel("", background_image, JLabel.CENTER);
				Image img = background_image.getImage();
				Image temp_img = img.getScaledInstance(1920, 1080, Image.SCALE_SMOOTH);
				background_image = new ImageIcon(temp_img);
				background.setBounds(0, 0, 1920, 1080);
				f1.add(background);

				f1.setBackground(Color.lightGray);
				f1.addWindowListener(new WindowAdapter() {
					public void windowClosing(WindowEvent we) {
						System.exit(0);
					}

				});

				//
				b1.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent ae) {
						try {

							Frame f2 = new Frame();
							Label l1 = new Label("Enter Vendor_Id");
							l1.setBounds(450, 200, 120, 30);
							// l1.setBackground(Color.lightGray);
							TextField tf1 = new TextField("0");
							tf1.setBounds(600, 200, 100, 30);

							Label l2 = new Label("Enter Product_Id");
							l2.setBounds(450, 250, 120, 30);
							// l2.setBackground(Color.lightGray);
							TextField tf2 = new TextField("0");
							tf2.setBounds(600, 250, 100, 30);

							Label l3 = new Label("Count");
							l3.setBounds(450, 300, 120, 30);
							// l3.setBackground(Color.lightGray);
							TextField tf3 = new TextField("0");
							tf3.setBounds(600, 300, 100, 30);

							// Enter Button
							Button b11 = new Button("Enter");
							b11.setBounds(540, 370, 70, 30);

							f2.setLayout(null);
							f2.setSize(1920, 1080);
							f2.setTitle("SuperMarket");
							f2.setVisible(true);
							f2.add(l1);
							f2.add(tf1);
							f2.add(l2);
							f2.add(tf2);
							f2.add(l3);
							f2.add(tf3);
							f2.add(ta);
							f2.add(b11);
							ImageIcon background_image = new ImageIcon(
									"C:\\Users\\beula\\OneDrive\\Pictures\\Saved Pictures\\beuus.jpg ");
							JLabel background = new JLabel("", background_image, JLabel.CENTER);
							Image img = background_image.getImage();
							Image temp_img = img.getScaledInstance(1920, 1080, Image.SCALE_SMOOTH);
							background_image = new ImageIcon(temp_img);
							background.setBounds(0, 0, 1920, 1080);
							f2.add(background);

							f2.setBackground(Color.lightGray);
							String y = "";
							 String s="";
								Class.forName("org.postgresql.Driver");
								s="jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
						        con=DriverManager.getConnection(s);

							Statement cs = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
									ResultSet.CONCUR_UPDATABLE);
							rs = cs.executeQuery(query);
							while (rs.next()) {
								y += rs.getInt(1) + " " + rs.getInt(2) + " " + rs.getString(3) + " " + rs.getInt(4)
										+ " " + rs.getInt(5) + " " + rs.getInt(6) + "\n";

							}
							ta.setText(y);
							f2.addWindowListener(new WindowAdapter() {
								public void windowClosing(WindowEvent we) {
									System.exit(0);
								}

							});

							b11.addActionListener(new ActionListener() {
								public void actionPerformed(ActionEvent ae) {
									try {

										int asked = Integer.parseInt(tf3.getText());
										System.out.println("Asked is " + asked);

										int pid = Integer.parseInt(tf2.getText());
										int vid = Integer.parseInt(tf1.getText());

										String query1 = "";
										String query2 = "";
										String query3 = "";

										rs.absolute(0);
										while (rs.next()) {
											if (rs.getInt(1) == vid && rs.getInt(2) == pid) {

												if (rs.getInt(4) > asked) {
													int x = rs.getInt(4) - asked;
													int up = rs.getInt(5);
													int gst = rs.getInt(6);
													Timestamp ts = Timestamp.from(Instant.now());
													query1 = "update bVendors set available=" + x + " where prod_id="
															+ pid + " and Vendor_id=" + vid + "";
													query2 = "insert into bStocks values(" + pid + "," + vid + ","
															+ asked + ")";
													query3 = "insert into bReports values(" + pid + "," + vid
															+ ",'Purchased',' " + ts + "')";
													System.out.println(query3);
													double total;
													total = asked * (up + gst);
													cs.executeUpdate(query1);
													cs.executeUpdate(query2);
													cs.executeUpdate(query3);
													ta.setText("Total Cost is" + total);

													break;
												} else {
													System.out.println("Under-Stock");
												}
											}
										}
									} catch (Exception exe) {

									}
								}
							});
						}

						catch (Exception exe) {

						}

					}
				});
				b4.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent ae) {
						try {

							Frame f3 = new Frame();
							JButton b1 = new JButton("Sales_b/w_dates");
							b1.setBounds(540, 360, 230, 30);
							JButton b2 = new JButton("Purchases_b/w_dates");
							b2.setBounds(540, 270, 230, 30);
							JButton b3 = new JButton("Item_Level");
							b3.setBounds(740, 360, 230, 30);
							JButton b5 = new JButton("GST");
							b5.setBounds(740, 270, 230, 30);

							f3.setLayout(null);
							f3.setSize(1920, 1080);
							f3.setTitle("Reports");
							f3.setVisible(true);
							f3.add(b1);
							f3.add(b2);
							f3.add(b3);
							f3.add(b5);
							
							ImageIcon background_image = new ImageIcon(
									"C:\\Users\\beula\\OneDrive\\Pictures\\Saved Pictures\\beuus.jpg ");
							JLabel background = new JLabel("", background_image, JLabel.CENTER);
							Image img = background_image.getImage();
							Image temp_img = img.getScaledInstance(1920, 1080, Image.SCALE_SMOOTH);
							background_image = new ImageIcon(temp_img);
							background.setBounds(0, 0, 1920, 1080);
							f3.add(background);

							f3.setBackground(Color.lightGray);
							String y = "";
							 String s="";
								Class.forName("org.postgresql.Driver");
								s="jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
						        con=DriverManager.getConnection(s);

							Statement cs = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
									ResultSet.CONCUR_UPDATABLE);
							b2.addActionListener(new ActionListener() {
								public void actionPerformed(ActionEvent ae) {
									try {
										Frame f2 = new Frame();
										Label l1 = new Label("Enter Date1");
										l1.setBounds(450, 200, 120, 30);
										// l1.setBackground(Color.lightGray);
										TextField tf1 = new TextField("0");
										tf1.setBounds(600, 200, 100, 30);

										Label l2 = new Label("Enter Date1");
										l2.setBounds(450, 250, 120, 30);
										// l2.setBackground(Color.lightGray);
										TextField tf2 = new TextField("0");
										tf2.setBounds(600, 250, 100, 30);

										
										// Enter Button
										Button b11 = new Button("Enter");
										b11.setBounds(540, 370, 70, 30);

										f2.setLayout(null);
										f2.setSize(1920, 1080);
										f2.setTitle("SuperMarket");
										f2.setVisible(true);
										f2.add(l1);
										f2.add(tf1);
										f2.add(l2);
										f2.add(tf2);
										
										f2.add(ta);
										f2.add(b11);
										String query2="Select * from bReports";
										ImageIcon background_image = new ImageIcon(
												"C:\\Users\\beula\\OneDrive\\Pictures\\Saved Pictures\\beuus.jpg ");
										JLabel background = new JLabel("", background_image, JLabel.CENTER);
										Image img = background_image.getImage();
										Image temp_img = img.getScaledInstance(1920, 1080, Image.SCALE_SMOOTH);
										background_image = new ImageIcon(temp_img);
										background.setBounds(0, 0, 1920, 1080);
										f2.add(background);

										f2.setBackground(Color.lightGray);
										String y = "";
										 String s="";
											Class.forName("org.postgresql.Driver");
											s="jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
									        con=DriverManager.getConnection(s);

										Statement cs = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
												ResultSet.CONCUR_UPDATABLE);
										rs=cs.executeQuery(query2);
										Date d1 = Date.valueOf(tf1.getText());
										 SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
										 Date d1 = format.parse(tf1.getText());
										 Date d2 = format.parse(tf2.getText());
										
										rs.absolute(0);
										String z="";
										while (rs.next()) {
											

												if (d1<rs.getDate(4) && d2> rs.getDate(4) && rs.getString(2)=="Purchased") {
												z+=rs.getInt(1)+" "+rs.getInt(2)+" "+rs.getString(2)+" "+rs.getDate(3)+" "+rs.getInt(4)+" "+"\n";
												}
													
												}
										}
							catch(Exception e) {
								
							}
							ta.setText(y);
							f2.addWindowListener(new WindowAdapter() {
								public void windowClosing(WindowEvent we) {
									System.exit(0);
								}

							});
								}
							});
							catch(Exception e) {
								
							}
						}
					});
				b3.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent ae) {
						try {

							Frame f2 = new Frame();
							TextArea ta1 = new TextArea();
							ta1.setBounds(340, 150, 700, 250);
							f2.setLayout(null);
							f2.setSize(1300, 1300);
							f2.setTitle("Stocks");
							f2.setVisible(true);
							f2.add(ta1);

							f2.setBackground(Color.lightGray);
							String query1;
							query1 = "Select * from bStocks";
							String y = "";
							String s="";
							Class.forName("org.postgresql.Driver");
							s="jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
					        con=DriverManager.getConnection(s);
							Statement cs = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
									ResultSet.CONCUR_UPDATABLE);
							rs = cs.executeQuery(query1);
							y = "Prod_id" + " " + " " + "Vendor_id" + " " + " " + " " + "Stock_Count" + "\n";
							while (rs.next()) {
								y += rs.getInt(1) + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + " " + " " + " " + " " + rs.getInt(2) + " " + " " + " " + " "
										+ " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + rs.getString(3) + "\n";

							}
							ta1.setText(y);
							f2.addWindowListener(new WindowAdapter() {
								public void windowClosing(WindowEvent we) {
									System.exit(0);
								}

							});
						} catch (Exception e) {

						}
					}
				});

			}
		});

		b6.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ae) {

				// Result set of VEndors list
				query = "Select * from bStocks inner join bproducts on bStocks.pid=bproducts.prod_id";

				try {
                    String y="";
                    String s="";
					Class.forName("org.postgresql.Driver");
					s="jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
			        con=DriverManager.getConnection(s);
		            
		            

				} catch (Exception exe) {
					System.out.println(exe);
				}

				Frame f1 = new Frame();
				Button b1 = new Button("Sales");
				b1.setBounds(540, 360, 90, 30);

				f1.setLayout(null);
				f1.setSize(1300, 1300);
				f1.setTitle("CUSTOMER");
				f1.setVisible(true);
				f1.add(b1);

				f1.setBackground(Color.lightGray);
				f1.addWindowListener(new WindowAdapter() {
					public void windowClosing(WindowEvent we) {
						System.exit(0);
					}

				});

				//
				b1.addActionListener(new ActionListener() {
					public void actionPerformed(ActionEvent ae) {
						try {
							Frame f2 = new Frame();
							Label l1 = new Label("Enter Vendor_Id");
							l1.setBounds(450, 200, 120, 30);
							l1.setBackground(Color.lightGray);
							TextField tf1 = new TextField("0");
							tf1.setBounds(600, 200, 100, 30);

							Label l2 = new Label("Enter Product_Id");
							l2.setBounds(450, 250, 120, 30);
							l2.setBackground(Color.lightGray);
							TextField tf2 = new TextField("0");
							tf2.setBounds(600, 250, 100, 30);

							Label l3 = new Label("Quantity");
							l3.setBounds(450, 300, 120, 30);
							l3.setBackground(Color.lightGray);
							TextField tf3 = new TextField("0");
							tf3.setBounds(600, 300, 100, 30);

							// Enter Button
							Button b11 = new Button("Enter");
							b11.setBounds(540, 370, 70, 30);

							f2.setLayout(null);
							f2.setSize(1300, 1300);
							f2.setTitle("Customer");
							f2.setVisible(true);
							f2.add(l1);
							f2.add(tf1);
							f2.add(l2);
							f2.add(tf2);
							f2.add(l3);
							f2.add(tf3);
							f2.add(ta);
							f2.add(b11);
							f2.setBackground(Color.lightGray);
							 String y="";
							 String s="";
								Class.forName("org.postgresql.Driver");
								s="jdbc:postgresql://localhost:5432/newdb?user=postgres&password=Beuganji7@";
						        con=DriverManager.getConnection(s);

							Statement cs = con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,
									ResultSet.CONCUR_UPDATABLE);
							rs = cs.executeQuery(query);
							System.out.println(rs);
							y = "Prod_id" + " " + " " + "Vendor_id" + " " + " " + "Stock_Available" + " " + " "
									+ "Prod_id" + " " + " " + " " + " " + " " + " " + " " + "Prod_Name" + " " + " "
									+ " " + " " + " " + " " + " " + " " + "Category_name" + " " + " " + " " + " " + " "
									+ " " + " " + " " + " " + " " + " " + " " + "GST" + " " + " " + " " + " " + " "
									+ " " + " " + " " + " " + " " + " " + " " + " " + " " + "Unit_Price" + " " + " "
									+ "\n";
							while (rs.next()) {
								y += rs.getInt(1) + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + " " + rs.getInt(2) + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + rs.getString(3)
										+ " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + rs.getString(4) + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + rs.getString(5) + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + rs.getString(6)
										+ " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + " " + " " + " " + " " + rs.getString(7) + " " + " " + " "
										+ " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " " + " "
										+ " " + " " + " " + rs.getString(8) + "\n";

							}
							ta.setText(y);
							f2.addWindowListener(new WindowAdapter() {
								public void windowClosing(WindowEvent we) {
									System.exit(0);
								}

							});

							b11.addActionListener(new ActionListener() {
								public void actionPerformed(ActionEvent ae) {
									try {

										int asked = Integer.parseInt(tf3.getText());
										System.out.println("Asked is " + asked);

										int pid = Integer.parseInt(tf2.getText());
										int vid = Integer.parseInt(tf1.getText());

										String query1 = "";

										String query3 = "";

										rs.absolute(0);
										while (rs.next()) {
											if (rs.getInt(1) == vid && rs.getInt(2) == pid) {
												if (rs.getInt(3) > asked) {
													int x = rs.getInt(3) - asked;
													int up = rs.getInt(8);
													int gst = rs.getInt(7);
													Timestamp ts = Timestamp.from(Instant.now());
													query1 = "update bStocks set StockCount=" + x + " where pid=" + pid
															+ " and vid=" + vid + "";
													double total;
													total = asked * (up + gst);
													query3 = "insert into bReports values(" + pid + "," + vid
															+ ",'Sold',' " + ts + "'," + (int) total + ")";
													System.out.println(query3);
													// double total;
													// total = asked * (up + gst);
													cs.executeUpdate(query1);

													cs.executeUpdate(query3);
													ta.setText("Total Cost is" + total);

													break;
												} else {
													System.out.println("Stock Not Available");
												}
											}
										}

									} catch (Exception exe) {

									}
								}
							});

						} catch (Exception exe) {

						}

					}
				});

			}
		});
	}
}

//
public class SM {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		superMarketApplication sma = new superMarketApplication();

	}

}
